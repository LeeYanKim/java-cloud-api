name: Deploy to Cloud Run

on:
  push:
    branches: [main]

jobs:
  build-test-deploy:
    name: Build, Test, and Deploy
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mydb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make Maven wrapper executable
        run: chmod +x ./mvnw

      - name: Run Unit Tests with PostgreSQL
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/mydb
          SPRING_DATASOURCE_USERNAME: postgres
          SPRING_DATASOURCE_PASSWORD: postgres
        run: ./mvnw test

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker to use gcloud CLI
        run: gcloud auth configure-docker --quiet

      - name: Build Docker image
        run: docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/java-cloud-api .

      - name: Push Docker image
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/java-cloud-api

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: java-cloud-api
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/java-cloud-api
          region: australia-southeast1
          flags: "--allow-unauthenticated"
